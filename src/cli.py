from typing import Optional

import uvicorn
from alembic import command
from alembic.config import Config
from alembic.util import AutogenerateDiffsDetected
from rich import print as pt
from rich.panel import Panel
from typer import Typer

from config import settings

cli = Typer(pretty_exceptions_show_locals=False)
alembic_cfg = Config()
alembic_cfg.set_main_option("script_location", "migrations")
alembic_cfg.set_main_option("sqlalchemy.url", settings.DATABASE_URL)
alembic_cfg.set_main_option("compare_type", "true")


@cli.command(
    help="""
    Detect database changes and create migrations.
    Make sure to import all the model classes to the apps.models.__init__.py file to detect all the changes.
    """
)
def make_migrations(message: Optional[str] = None) -> None:
    """
    Detects and generates database migrations.
    """
    pt(Panel.fit("[bold yellow]Detecting new migrations![/bold yellow]"))
    try:
        command.check(alembic_cfg)
        pt(Panel.fit("[bold green]No changes detected![/bold green]"))
    except AutogenerateDiffsDetected:
        pt(
            Panel.fit(
                "[bold yellow]Changes detected! Generating migrations.[/bold yellow]"
            )
        )
        command.revision(alembic_cfg, message=message, autogenerate=True)


@cli.command(help="Migrate the database")
def migrate() -> None:
    """
    Migrates the database to the latest version.
    """
    pt(Panel.fit("[bold yellow]Migrating database![/bold yellow]"))
    command.upgrade(alembic_cfg, "head")


@cli.command(help="Rollback the database by one migration")
def rollback() -> None:
    """
    Rollbacks the database by one migration.
    """
    pt(Panel.fit("[bold yellow]Rolling back the database![/bold yellow]"))
    command.downgrade(alembic_cfg, "-1")


@cli.command(help="Run the server")
def run(
    host: Optional[str] = None,
    port: Optional[int] = None,
) -> None:
    """
    Run the server.
    """

    if not host:
        host = settings.APP_HOST
    if not port:
        port = settings.APP_PORT

    pt(Panel.fit("[bold yellow]Running in debug mode![/bold yellow]"))
    uvicorn.run(
        "apps.server:debug_app",
        host=host,
        port=port,
        reload=True,
        reload_dirs=["."],
        log_level="debug",
        use_colors=True,
    )
